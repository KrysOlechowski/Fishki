{"version":3,"sources":["types/enums.ts","organisms/create-card-status/create-card-status.tsx","utils/api.ts","components/create-card/create-card.tsx","components/main/main.tsx","App.tsx","reportWebVitals.ts","index.tsx","types/index.ts"],"names":["CreatedStatus","CreateCardStatus","status","NEW","CREATED","FAILED","getAllCards","API_URL","getApiUrl","ky","get","json","CreateCard","useState","cardTitle","setCardTitle","cardFront","setCardFront","cardBack","setCardBack","cardStatus","setCardStatus","emptyFieldError","setEmptyFieldError","createdStatus","setCreatedStatus","onSubmit","useCallback","e","preventDefault","payload","title","front","back","PENDING","post","createCard","then","catch","err","console","log","onChange","name","target","value","CreateCardWrapper","action","className","type","placeholder","styled","div","Main","cards","setCards","hasError","setError","useEffect","map","card","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a32b7356.chunk.js","sourcesContent":["export enum CreatedStatus {\r\n  NEW = \"NEW\",\r\n  PENDING = \"PENDING\",\r\n  CREATED = \"CREATED\",\r\n  FAILED = \"FAILED\",\r\n}\r\n","import { FC } from 'react';\r\nimport { CreatedStatus } from '../../types';\r\n\r\n\r\ninterface Props {\r\n   status?: CreatedStatus;\r\n}\r\n\r\n\r\n\r\nexport const CreateCardStatus: FC<Props> = ({ status }) => {\r\n\r\n\r\n   if (status === CreatedStatus.NEW) {\r\n      return (\r\n         <>\r\n            <h3>Create card</h3>\r\n         </>\r\n      )\r\n   } else if (status === CreatedStatus.CREATED) {\r\n      return (\r\n         <>\r\n            <h3>Card Created</h3>\r\n         </>\r\n      )\r\n   } else if (status === CreatedStatus.FAILED) {\r\n      return (\r\n         <>\r\n            <h3>Creatind card failed</h3>\r\n         </>\r\n      )\r\n   } else {\r\n      return (\r\n         <>\r\n            <h3>...</h3>\r\n         </>\r\n      )\r\n   }\r\n};\r\n\r\n","import ky from \"ky\";\r\nimport { Card } from \"../types\";\r\n\r\nexport const getAllCards = (): Promise<Array<Card>> => {\r\n  const API_URL = getApiUrl();\r\n  return ky.get(`${API_URL}/cards`).json();\r\n};\r\n\r\nexport const createCard = (payload: Card): Promise<any> => {\r\n  const API_URL = getApiUrl();\r\n  return ky.post(`${API_URL}/add`, { json: payload });\r\n};\r\n\r\nexport const getApiUrl = (): string => {\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    return \"http://localhost:3003\";\r\n  } else {\r\n    return \"https://node11255.herokuapp.com\";\r\n  }\r\n};\r\n","import React, { FC, useCallback, useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport { CreateCardStatus } from '../../organisms/create-card-status';\r\nimport { CreatedStatus } from '../../types';\r\n\r\nimport { createCard } from '../../utils/api'\r\n\r\ninterface Props {\r\n}\r\n\r\n\r\n\r\nexport const CreateCard: FC<Props> = () => {\r\n   const [cardTitle, setCardTitle] = useState(\"\")\r\n   const [cardFront, setCardFront] = useState(\"\")\r\n   const [cardBack, setCardBack] = useState(\"\")\r\n   const [cardStatus, setCardStatus] = useState(\"\")\r\n   const [emptyFieldError, setEmptyFieldError] = useState(false)\r\n   const [createdStatus, setCreatedStatus] = useState(CreatedStatus.NEW)\r\n\r\n   const onSubmit: any = useCallback(\r\n      (e: any) => {\r\n         e.preventDefault()\r\n         if (!cardTitle || !cardFront || !cardBack || !cardStatus) {\r\n            setEmptyFieldError(true)\r\n         } else {\r\n            setEmptyFieldError(false)\r\n            const payload = {\r\n               title: cardTitle,\r\n               front: cardFront,\r\n               back: cardBack,\r\n               status: cardStatus\r\n            }\r\n            setCreatedStatus(CreatedStatus.PENDING)\r\n            createCard(payload).then(() => {\r\n               setCreatedStatus(CreatedStatus.CREATED)\r\n               setCardTitle(\"\")\r\n               setCardFront(\"\")\r\n               setCardBack(\"\")\r\n               setCardStatus(\"\")\r\n\r\n            }).catch((err) => {\r\n               setCreatedStatus(CreatedStatus.FAILED)\r\n               console.log(err)\r\n            })\r\n         }\r\n      },\r\n      [cardTitle, cardFront, cardBack, cardStatus]\r\n   )\r\n\r\n   const onChange = useCallback(\r\n      (e: any) => {\r\n         const name = e.target.name\r\n         const value = e.target.value\r\n         if (name === \"title\") {\r\n            setCardTitle(value)\r\n         } else if (name === \"front\") {\r\n            setCardFront(value)\r\n         } else if (name === \"back\") {\r\n            setCardBack(value)\r\n         } else {\r\n            setCardStatus(value)\r\n         }\r\n      },\r\n      [],\r\n   )\r\n\r\n   return (\r\n      <>\r\n\r\n         <CreateCardWrapper>\r\n            <h1>Create card</h1>\r\n            <form action=\"submit\" onSubmit={onSubmit} >\r\n               <div className=\"\">\r\n                  <input type=\"text\" placeholder=\"Title\" onChange={onChange} value={cardTitle} name=\"title\" />\r\n               </div>\r\n               <div className=\"\">\r\n                  <input type=\"text\" placeholder=\"Front\" onChange={onChange} value={cardFront} name=\"front\" />\r\n               </div>\r\n               <div className=\"\">\r\n                  <input type=\"text\" placeholder=\"Back\" onChange={onChange} value={cardBack} name=\"back\" />\r\n               </div>\r\n               <div className=\"\">\r\n                  <input type=\"text\" placeholder=\"Status\" onChange={onChange} value={cardStatus} name=\"status\" />\r\n               </div>\r\n\r\n               <div className=\"\">\r\n                  <button type=\"submit\">Submit</button>\r\n               </div>\r\n               <CreateCardStatus status={createdStatus} />\r\n               {emptyFieldError && (\r\n                  <div className=\"\">\r\n                     <p>You need to fill all the required forms</p>\r\n                  </div>\r\n               )}\r\n            </form>\r\n         </CreateCardWrapper>\r\n      </>\r\n   )\r\n};\r\n\r\nconst CreateCardWrapper = styled.div`\r\nwidth:350px;\r\npadding:50px;\r\nborder:1px solid red;\r\n`\r\n","import React, { FC, useEffect, useState } from 'react';\r\n\r\nimport { CreateCard } from '../create-card'\r\nimport { getAllCards } from '../../utils';\r\n\r\nimport { Card } from '../../types'\r\ninterface MainProps {\r\n}\r\n\r\n\r\nexport const Main: FC<MainProps> = () => {\r\n   const [cards, setCards] = useState<Array<Card> | null>(null)\r\n   const [hasError, setError] = useState(false)\r\n\r\n   useEffect(() => {\r\n      getAllCards().then(cards => {\r\n         setCards(cards)\r\n      }).catch(() => setError(true))\r\n   }, [])\r\n\r\n   return (\r\n      <>\r\n         <h1>Cards :</h1>\r\n         {cards && cards.map(card => {\r\n            return <p key={card.title}>{card.title}</p>\r\n         })}\r\n\r\n         <CreateCard />\r\n         {hasError && (\r\n            <h1>Error while loading the cards</h1>\r\n         )}\r\n      </>\r\n   )\r\n};\r\n","import { Main } from './components/main'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export * from \"./types\";\r\nexport * from \"./enums\";\r\n"],"sourceRoot":""}