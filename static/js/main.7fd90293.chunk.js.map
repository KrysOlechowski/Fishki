{"version":3,"sources":["types/enums.ts","types/index.ts","atoms/create-card-status/create-card-status.tsx","utils/api.ts","components/create-card/create-card.tsx","components/create-collection/create-collection.tsx","organisms/card/card.tsx","components/main/main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CardCreateStatus","CardDeleteStatus","CardUpdateStatus","CreateCardStatus","status","NEW","CREATED","FAILED","getAllCards","API_URL","getApiUrl","ky","get","json","getCollectionsNamesAndCards","a","collectionsNames","cards","console","log","CreateCard","useState","cardTitle","setCardTitle","cardFront","setCardFront","cardBack","setCardBack","cardStatus","setCardStatus","emptyFieldError","setEmptyFieldError","cardCreateStatus","setCardCreateStatus","onSubmit","useCallback","e","preventDefault","payload","title","front","back","PENDING","post","createCard","then","catch","err","onChange","name","target","value","CreateCardWrapper","action","autoComplete","className","type","placeholder","styled","div","CreateCollection","onCreateCollection","createNewCollection","result","CardComponent","card","id","_id","NONE","cardDeleteStatus","setCardDeletestatus","cardUpdateStatus","setCardUpdateStatus","onDeleteCard","cardId","delete","deleteCard","res","DELETED","onUpdateCard","updatedFields","updateCard","ok","UPDATED","cardStatusText","useMemo","cardUpdateText","CardWrapper","clsx","deleted","size","onClick","props","Main","setCards","hasError","setError","useEffect","getCollectionsNames","collection","MainWrapper","MenuWrapper","CardsWrapper","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fd90293.chunk.js","sourcesContent":["export enum CardCreateStatus {\r\n  NEW = \"NEW\",\r\n  PENDING = \"PENDING\",\r\n  CREATED = \"CREATED\",\r\n  FAILED = \"FAILED\",\r\n}\r\n\r\nexport enum CardDeleteStatus {\r\n  NONE = \"NONE\",\r\n  DELETED = \"DELETED\",\r\n  FAILED = \"FAILED\",\r\n  PENDING = \"PENDING\",\r\n}\r\n\r\nexport enum CardUpdateStatus {\r\n  NONE = \"NONE\",\r\n  PENDING = \"PENDING\",\r\n  FAILED = \"FAILED\",\r\n  UPDATED = \"UPDATED\",\r\n}\r\n","export * from \"./types\";\r\nexport * from \"./enums\";\r\n","import { FC } from 'react';\r\nimport { CardCreateStatus } from '../../types';\r\n\r\n\r\ninterface Props {\r\n   status?: CardCreateStatus;\r\n}\r\n\r\n\r\n\r\nexport const CreateCardStatus: FC<Props> = ({ status }) => {\r\n\r\n\r\n   if (status === CardCreateStatus.NEW) {\r\n      return (\r\n         <>\r\n            <h3>Create card</h3>\r\n         </>\r\n      )\r\n   } else if (status === CardCreateStatus.CREATED) {\r\n      return (\r\n         <>\r\n            <h3>Card Created</h3>\r\n         </>\r\n      )\r\n   } else if (status === CardCreateStatus.FAILED) {\r\n      return (\r\n         <>\r\n            <h3>Creatind card failed</h3>\r\n         </>\r\n      )\r\n   } else {\r\n      return (\r\n         <>\r\n            <h3>...</h3>\r\n         </>\r\n      )\r\n   }\r\n};\r\n\r\n","import ky from \"ky\";\r\nimport { CardCreate, CardUpdate, Card } from \"../types\";\r\n\r\nexport const getAllCards = (): Promise<Array<Card>> => {\r\n  const API_URL = getApiUrl();\r\n  return ky.get(`${API_URL}/cards`).json();\r\n};\r\n\r\nexport const createCard = (payload: CardCreate): Promise<unknown> => {\r\n  const API_URL = getApiUrl();\r\n  return ky.post(`${API_URL}/add`, { json: payload });\r\n};\r\n\r\nexport const deleteCard = (id: string): Promise<any> => {\r\n  const API_URL = getApiUrl();\r\n  const payload = {\r\n    cardId: id,\r\n  };\r\n  return ky.delete(`${API_URL}/delete`, { json: payload }).json();\r\n};\r\n\r\nexport const updateCard = (updatedFields: CardUpdate): Promise<any> => {\r\n  const API_URL = getApiUrl();\r\n  const payload = updatedFields;\r\n  return ky.post(`${API_URL}/update`, { json: payload }).json();\r\n};\r\n\r\nexport const getCollectionsNamesAndCards = async () => {\r\n  const API_URL = getApiUrl();\r\n\r\n  try {\r\n    const collectionsNames = await ky.get(`${API_URL}/collections`).json();\r\n    const cards = await ky.get(`${API_URL}/cards`).json();\r\n    console.log(collectionsNames);\r\n    console.log(cards);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getCollectionsNames = (): Promise<Array<Card>> => {\r\n  const API_URL = getApiUrl();\r\n  return ky.get(`${API_URL}/collections`).json();\r\n};\r\n\r\nexport const createNewCollection = (name: string): Promise<Array<Card>> => {\r\n  const API_URL = getApiUrl();\r\n  const payload = {\r\n    name: name,\r\n  };\r\n  return ky.post(`${API_URL}/collections`, { json: payload }).json();\r\n};\r\n\r\nexport const getApiUrl = (): string => {\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    return \"http://localhost:3003\";\r\n  } else {\r\n    return \"https://node11255.herokuapp.com\";\r\n  }\r\n};\r\n","import React, { FC, useCallback, useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport { CreateCardStatus } from '../../atoms/create-card-status';\r\nimport { CardCreateStatus } from '../../types';\r\n\r\nimport { createCard } from '../../utils/api'\r\n\r\ninterface Props {\r\n}\r\n\r\n\r\n\r\nexport const CreateCard: FC<Props> = () => {\r\n   const [cardTitle, setCardTitle] = useState(\"\")\r\n   const [cardFront, setCardFront] = useState(\"\")\r\n   const [cardBack, setCardBack] = useState(\"\")\r\n   const [cardStatus, setCardStatus] = useState(\"\")\r\n   const [emptyFieldError, setEmptyFieldError] = useState(false)\r\n   const [cardCreateStatus, setCardCreateStatus] = useState(CardCreateStatus.NEW)\r\n\r\n   const onSubmit: any = useCallback(\r\n      (e: any) => {\r\n         e.preventDefault()\r\n         if (!cardTitle || !cardFront || !cardBack || !cardStatus) {\r\n            setEmptyFieldError(true)\r\n         } else {\r\n            setEmptyFieldError(false)\r\n            const payload = {\r\n               title: cardTitle,\r\n               front: cardFront,\r\n               back: cardBack,\r\n               status: cardStatus\r\n            }\r\n            setCardCreateStatus(CardCreateStatus.PENDING)\r\n            createCard(payload).then(() => {\r\n               setCardCreateStatus(CardCreateStatus.CREATED)\r\n               setCardTitle(\"\")\r\n               setCardFront(\"\")\r\n               setCardBack(\"\")\r\n               setCardStatus(\"\")\r\n\r\n            }).catch((err) => {\r\n               setCardCreateStatus(CardCreateStatus.FAILED)\r\n               console.log(err)\r\n            })\r\n         }\r\n      },\r\n      [cardTitle, cardFront, cardBack, cardStatus]\r\n   )\r\n\r\n   const onChange = useCallback(\r\n      (e: any) => {\r\n         const name = e.target.name\r\n         const value = e.target.value\r\n         if (name === \"title\") {\r\n            setCardTitle(value)\r\n         } else if (name === \"front\") {\r\n            setCardFront(value)\r\n         } else if (name === \"back\") {\r\n            setCardBack(value)\r\n         } else {\r\n            setCardStatus(value)\r\n         }\r\n      },\r\n      [],\r\n   )\r\n\r\n   return (\r\n      <>\r\n\r\n         <CreateCardWrapper>\r\n            <h1>Create card</h1>\r\n            <form action=\"submit\" onSubmit={onSubmit} autoComplete=\"off\">\r\n               <div className=\"\">\r\n                  <input type=\"text\" placeholder=\"Title\" onChange={onChange} value={cardTitle} name=\"title\" />\r\n               </div>\r\n               <div className=\"\">\r\n                  <input type=\"text\" placeholder=\"Front\" onChange={onChange} value={cardFront} name=\"front\" />\r\n               </div>\r\n               <div className=\"\">\r\n                  <input type=\"text\" placeholder=\"Back\" onChange={onChange} value={cardBack} name=\"back\" />\r\n               </div>\r\n               <div className=\"\">\r\n                  <input type=\"text\" placeholder=\"Status\" onChange={onChange} value={cardStatus} name=\"status\" />\r\n               </div>\r\n\r\n               <div className=\"\">\r\n                  <button type=\"submit\">Submit</button>\r\n               </div>\r\n               <CreateCardStatus status={cardCreateStatus} />\r\n               {emptyFieldError && (\r\n                  <div className=\"\">\r\n                     <p>You need to fill all the required forms</p>\r\n                  </div>\r\n               )}\r\n            </form>\r\n         </CreateCardWrapper>\r\n      </>\r\n   )\r\n};\r\n\r\nconst CreateCardWrapper = styled.div`\r\nwidth:350px;\r\npadding:50px;\r\nborder:1px solid red;\r\n`\r\n","import { FC, useCallback } from 'react';\r\nimport { createNewCollection } from '../../utils';\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\n\r\n\r\nexport const CreateCollection: FC<Props> = () => {\r\n\r\n   const onCreateCollection = useCallback(\r\n      (e) => {\r\n         e.preventDefault()\r\n         createNewCollection(\"lolo\").then((result) => {\r\n            console.log(result)\r\n         })\r\n      },\r\n      [],\r\n   )\r\n\r\n   return (\r\n      <div>\r\n         <form onSubmit={onCreateCollection}>\r\n            Create collection:\r\n               <button >Create Colection</button>\r\n         </form>\r\n\r\n      </div>\r\n   )\r\n};\r\n\r\n","import React, { FC, useCallback, useMemo, useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport clsx from 'clsx'\r\n\r\n\r\nimport { Card, CardDeleteStatus, CardUpdateStatus } from '../../types';\r\nimport { deleteCard, updateCard } from '../../utils';\r\n\r\ninterface Props {\r\n   card: Card;\r\n}\r\n\r\n\r\nexport const CardComponent: FC<Props> = ({ card }) => {\r\n   const { title, front, back, status, _id: id } = card\r\n\r\n   const [cardDeleteStatus, setCardDeletestatus] = useState(CardDeleteStatus.NONE)\r\n   const [cardUpdateStatus, setCardUpdateStatus] = useState(CardUpdateStatus.NONE)\r\n\r\n   const onDeleteCard = useCallback(\r\n      () => {\r\n         setCardDeletestatus(CardDeleteStatus.PENDING)\r\n         const cardId = id\r\n         deleteCard(cardId).then((res) => {\r\n            console.log(\"card deleted + res: \")\r\n            console.log(res)\r\n            setCardDeletestatus(CardDeleteStatus.DELETED)\r\n         }).catch((err) => {\r\n            console.log(err)\r\n            setCardDeletestatus(CardDeleteStatus.FAILED)\r\n\r\n         })\r\n      },\r\n      [id],\r\n   )\r\n\r\n   const onUpdateCard = useCallback(\r\n      () => {\r\n         setCardUpdateStatus(CardUpdateStatus.PENDING)\r\n         const updatedFields = {\r\n            id: id,\r\n            title: \"rrr title\",\r\n            front: \"updated front\",\r\n            back: \"updated back\",\r\n            status: \"updated status\"\r\n         }\r\n         updateCard(updatedFields).then(res => {\r\n            if (res.ok) {\r\n               setCardUpdateStatus(CardUpdateStatus.UPDATED)\r\n            }\r\n         }).catch((err) => {\r\n            console.log(err)\r\n            setCardUpdateStatus(CardUpdateStatus.FAILED)\r\n         })\r\n      },\r\n      [id],\r\n   )\r\n\r\n   const cardStatusText = useMemo(() => {\r\n      if (cardDeleteStatus === CardDeleteStatus.NONE) {\r\n         return \"Delete Card\"\r\n      }\r\n      else if (cardDeleteStatus === CardDeleteStatus.PENDING) {\r\n         return \"Removing....\"\r\n      } else if (cardDeleteStatus === CardDeleteStatus.FAILED) {\r\n         return \"Failed removing card\"\r\n      } else if (cardDeleteStatus === CardDeleteStatus.DELETED) {\r\n         return \"Card deleted\"\r\n      } else {\r\n         return \"\"\r\n      }\r\n   }, [cardDeleteStatus])\r\n\r\n   const cardUpdateText = useMemo(() => {\r\n      if (cardUpdateStatus === CardUpdateStatus.NONE) {\r\n         return \"Update Card\"\r\n      }\r\n      else if (cardUpdateStatus === CardUpdateStatus.PENDING) {\r\n         return \"Updating Card\"\r\n      } else if (cardUpdateStatus === CardUpdateStatus.FAILED) {\r\n         return \"Updating Card Failed\"\r\n      } else if (cardUpdateStatus === CardUpdateStatus.UPDATED) {\r\n         return \"Card Updated\"\r\n      } else {\r\n         return \"\"\r\n      }\r\n   }, [cardUpdateStatus])\r\n\r\n\r\n   return (\r\n      <CardWrapper className={clsx(\"test2\", { deleted: cardDeleteStatus === CardDeleteStatus.DELETED })} size=\"14\">\r\n         <h2>title: {title}</h2>\r\n         <h3>front: {front}</h3>\r\n         <h3>back: {back}</h3>\r\n         <h3>status: {status}</h3>\r\n         <h3>id: {id}</h3>\r\n         <button onClick={onDeleteCard}>{cardStatusText}</button>\r\n         <button onClick={onUpdateCard}>{cardUpdateText}</button>\r\n      </CardWrapper >\r\n   )\r\n};\r\n\r\ninterface CardWrapperProps {\r\n   className: string;\r\n   size: string;\r\n}\r\nconst CardWrapper = styled.div<CardWrapperProps>`\r\n &.test2{\r\n   border:1px solid green;\r\n}\r\n&.deleted{\r\n   background-color:pink;\r\n}\r\n${({ size }) =>\r\n      size === \"combined\" &&\r\n      `\r\n    background-color:green;\r\n  `}\r\nwidth:300px;\r\nheight:400px;\r\nfont-size:${props => props.size}px;\r\n`\r\n","import { FC, useEffect, useState } from 'react';\r\nimport styled from 'styled-components'\r\n\r\nimport { CreateCard } from '../create-card'\r\nimport { CreateCollection } from '../create-collection'\r\nimport { getAllCards, getCollectionsNames, getCollectionsNamesAndCards } from '../../utils';\r\n\r\nimport { Card } from '../../types'\r\nimport { CardComponent } from '../../organisms/card'\r\ninterface MainProps {\r\n}\r\n\r\n\r\nexport const Main: FC<MainProps> = () => {\r\n   const [cards, setCards] = useState<Array<Card> | null>(null)\r\n   const [hasError, setError] = useState(false)\r\n\r\n\r\n   useEffect(() => {\r\n      getAllCards().then(cards => {\r\n         console.log(cards)\r\n         setCards(cards)\r\n      }).catch(() => setError(true))\r\n      getCollectionsNames().then(collection => {\r\n         console.log(collection)\r\n      }).catch(() => setError(true))\r\n      getCollectionsNamesAndCards()\r\n   }, [])\r\n\r\n\r\n\r\n   return (\r\n      <MainWrapper>\r\n         <MenuWrapper>\r\n            <CreateCard />\r\n\r\n         </MenuWrapper>\r\n\r\n         <CardsWrapper>\r\n\r\n            {cards && cards.map(card => {\r\n               return <CardComponent card={card} key={card._id} />\r\n            })}\r\n         </CardsWrapper>\r\n         {hasError && (\r\n            <h1>Error while loading the cards</h1>\r\n         )}\r\n         <CreateCollection />\r\n      </MainWrapper>\r\n   )\r\n};\r\n\r\nconst MainWrapper = styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\n`\r\n\r\nconst MenuWrapper = styled.div`\r\n\r\n`\r\n\r\nconst CardsWrapper = styled.div`\r\ndisplay:flex;\r\n`\r\n","import { Main } from './components/main'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}