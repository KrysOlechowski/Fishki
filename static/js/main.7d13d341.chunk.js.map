{"version":3,"sources":["utils/api.ts","components/main/main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getAllCards","API_URL","getApiUrl","ky","get","json","Main","props","useState","cards","setCards","hasError","setError","useEffect","then","console","log","catch","map","card","title","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGaA,EAAc,WACzB,IAAMC,EAAUC,IAChB,OAAOC,IAAGC,IAAH,UAAUH,EAAV,WAA2BI,QAGvBH,EAAY,WAIrB,MAAO,mC,OCFEI,EAAO,SAACC,GAAsB,IAAD,EACbC,mBAA6B,MADhB,mBAChCC,EADgC,KACzBC,EADyB,OAEVF,oBAAS,GAFC,mBAEhCG,EAFgC,KAEtBC,EAFsB,KAYvC,OARAC,qBAAU,WACPb,IAAcc,MAAK,SAAAL,GAChBC,EAASD,GACTM,QAAQC,IAAIP,MAEZQ,OAAM,kBAAML,GAAS,QACxB,IAGA,qCACG,yCACCH,GAASA,EAAMS,KAAI,SAAAC,GACjB,OAAO,4BAAIA,EAAKC,WAElBT,GACE,mE,MClBGU,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCQSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7d13d341.chunk.js","sourcesContent":["import ky from \"ky\";\r\nimport { Card } from \"../types\";\r\n\r\nexport const getAllCards = (): Promise<Array<Card>> => {\r\n  const API_URL = getApiUrl();\r\n  return ky.get(`${API_URL}/cards`).json();\r\n};\r\n\r\nexport const getApiUrl = (): string => {\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    return \"http://localhost:3003\";\r\n  } else {\r\n    return \"https://node11255.herokuapp.com\";\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n\r\nimport { Card } from '../../types'\r\nimport { getAllCards } from '../../utils';\r\ninterface MainProps {\r\n}\r\n\r\n\r\nexport const Main = (props: MainProps) => {\r\n   const [cards, setCards] = useState<Array<Card> | null>(null)\r\n   const [hasError, setError] = useState(false)\r\n\r\n   useEffect(() => {\r\n      getAllCards().then(cards => {\r\n         setCards(cards)\r\n         console.log(cards)\r\n\r\n      }).catch(() => setError(true))\r\n   }, [])\r\n\r\n   return (\r\n      <>\r\n         <h1>Cards :</h1>\r\n         {cards && cards.map(card => {\r\n            return <p>{card.title}</p>\r\n         })}\r\n         {hasError && (\r\n            <h1>Error while loading the cards</h1>\r\n         )}\r\n      </>\r\n   )\r\n\r\n};\r\n","import { Main } from './components/main'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}